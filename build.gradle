plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
}

group = 'org.form-flow-starter-template'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

def props = new Properties()
if (file(".env").exists()) {
    file(".env").withInputStream { props.load(it) }
}


repositories {
    maven {
        name "GitHubPackages"
        url("https://maven.pkg.github.com/codeforamerica/form-flow")
        credentials {
            /** System.getenv is used in Github Actions because it has no .env file (we set those
             vars in github actions using env: var: value in the workflow)
             Local dev and Aptible's Docker container get these from props because they each have a
             .env file where these props are set **/
            username = System.getenv("USERNAME") ?: props.getProperty("USERNAME")
            password = System.getenv("TOKEN") ?: props.getProperty("TOKEN")
        }
    }
    mavenCentral()
}

def profile = props.getProperty('ENVIRONMENT')

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation 'org.flywaydb:flyway-core'

    if (profile == 'dev') {
        implementation fileTree(dir: "$rootDir/../form-flow/build/libs", include: '*.jar')
        println "Using local library ðŸ—¼"
    } else {
        implementation 'form-flow:form-flow-library:0.0.1-SNAPSHOT'
        println "Using 0.0.1-SNAPSHOT ðŸ’œ"
    }

    compileOnly 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.seleniumhq.selenium:selenium-java'
    testImplementation 'io.percy:percy-java-selenium:1.1.0'
    testImplementation 'org.awaitility:awaitility'
    testImplementation 'io.github.bonigarcia:webdrivermanager:5.3.0'
    testImplementation 'com.h2database:h2'

    runtimeOnly 'org.postgresql:postgresql'
}

tasks.named('test') {
    useJUnitPlatform()
}
