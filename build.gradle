plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'java'
}

group = 'org.form-flow-starter-template'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

def props = new Properties()
file(".env").withInputStream { props.load(it) }

repositories {
	maven {
		name "GitHubPackages"
		url("https://maven.pkg.github.com/codeforamerica/form-flow")
		credentials {
			username = project.findProperty("gpr.user") ?: props.getProperty("USERNAME")
			password = project.findProperty("gpr.key") ?: props.getProperty("TOKEN")
		}
	}
	mavenCentral()
	maven {
		url = uri("https://maven.pkg.github.com/codeforamerica/form-flow")
		credentials {
			username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
			password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
		}
	}
}

def profile = props.getProperty('ENVIRONMENT')

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	implementation 'org.flywaydb:flyway-core'

	if (profile == 'dev') {
		System.out.println("Hello from local")
		implementation fileTree(dir: "$rootDir/../form-flow/lib/build/libs", include: '*.jar')
	} else {
		System.out.println("Hello from GitHub")
		implementation 'form-flow:form-flow-library:0.0-SNAPSHOT'
	}

	compileOnly 'org.projectlombok:lombok'
	compileOnly 'org.springframework.boot:spring-boot-starter-actuator'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.seleniumhq.selenium:selenium-java'
	testImplementation 'io.percy:percy-java-selenium:1.1.0'
	testImplementation 'org.awaitility:awaitility'
	testImplementation 'io.github.bonigarcia:webdrivermanager:5.3.0'

	runtimeOnly 'org.postgresql:postgresql'
}

tasks.named('test') {
	useJUnitPlatform()
}